type Customer {
	customer_id: String!,
	first_name: String,
	last_name: String,
	email_id: String,
	phone_number: Float,
	creation_date: String
}

type CustomerObj {
	customer_id: String!,
	first_name: String,
	last_name: String,
	email_id: String,
	phone_number: Float,
	creation_date: String
	addressDetails: [Address]
}

type Address {
    address_id: String
    address1: String
    address2: String
    city: String
    state: String
    postal_code: String
    last_update_date: String
}

type CustomerCreated {
    customer_id: String
}

type Query {
    customerDetails:[CustomerObj]
	customers(count: Int):[CustomerObj]
	customerbyId(customer_id: String):CustomerObj
}

type Mutation {
	createCustomer(customer_id: String!, first_name: String!, last_name: String!, email_id: String, phone_number: Float, creation_date: String):CustomerCreated
}

enum AddressFilter {
Delhi,
Noida,
Banglore
}